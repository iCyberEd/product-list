{"version":3,"sources":["ModalAdd.js","ProdList.js","Product.js","App.js","reportWebVitals.js","index.js"],"names":["ModalAdd","show","setShow","modalAddClass","className","onClick","ProdList","err","load","items","useState","sortBy","setSortBy","showAddProduct","setShowAddProduct","sorting","type","sort","a","b","model","variant_count","message","isShown","console","dir","map","item","src","image","alt","description","id","Product","prod","product","fieldNames","textFields","field","push","ind","localStorage","setItem","JSON","stringify","Products","result","App","error","isLoaded","setIsLoaded","setItems","useEffect","parse","products","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.136cdb30.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function ModalAdd({show, setShow}) {\r\n  const modalAddClass = show ? \"modal-add\" : \"modal-add_disabled\"\r\n\r\n  return (\r\n    <div className={modalAddClass}>\r\n      <div className=\"modal-content\">\r\n        <button>Add</button>\r\n        <button onClick={ () => setShow(false)}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport ModalAdd from \"./ModalAdd\";\r\n\r\n\r\nexport default function ProdList({err, load, items}) {\r\n  const [sortBy, setSortBy] = useState(\"name\")\r\n  const [showAddProduct, setShowAddProduct] = useState(false)\r\n\r\n  function sorting(type) {\r\n    setSortBy(type)\r\n  }\r\n\r\n  if (sortBy === \"name\") {\r\n    items.sort( (a, b) => {\r\n      if (a.model < b.model) {\r\n        return -1;\r\n      }\r\n      if (a.model > b.model) {\r\n        return 1;\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  if (sortBy === \"count\") {\r\n    items.sort( (a, b) => a.variant_count - b.variant_count)\r\n  }\r\n\r\n  // Display Error/Loading message or content\r\n  if (err) {\r\n    return <div>Error: {err.message}</div>;\r\n  } else if (!load) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"list-buttons\">Sort by: \r\n          <button onClick={() => sorting(\"name\")}>Name</button>\r\n          <button onClick={() => sorting(\"count\")}>Count</button>\r\n          <button onClick={() => setShowAddProduct( isShown => !isShown)}>New Product</button>\r\n        </div>\r\n\r\n        <ul className=\"product-list\">\r\n          {console.dir(items)}\r\n          {items.map(item => (\r\n            <li key={item.id} className=\"product-list__item\">\r\n              <h3>{item.model}</h3>\r\n              <img src={item.image} className=\"product-list__item__img\" alt={\"Product \" + item.model}></img>\r\n              <span className=\"product-list__item__description\">{item.description}</span>\r\n              <span className=\"product-list__item__count\">Left: {item.variant_count}</span>\r\n              <button>More...</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ModalAdd show={showAddProduct} setShow={setShowAddProduct} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Product({prod}) {\r\n\r\n  const [product, setProduct] = useState(prod)\r\n\r\n  let fieldNames = []\r\n  let textFields = []\r\n  for (const field in product) {\r\n    if (typeof field === \"string\" || typeof field === \"number\") {\r\n      fieldNames.push(field)\r\n      textFields.push(product.field)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      - фото\r\n      - опис \r\n      - властивості (кількість таких продуктів в наявності, колір, розміри, вага)\r\n      - коментарі (список коментарів, та можливість добавити/видалити коментар, коментарі тільки ті які належать даному продукту)\r\n      - Кнопка редагувати продук \"Edit\", після чого відкривається модальне вікно з описом продукта у формі, де можливо змінити опис та властивості. Можна зберегти, або відмінити збереження.\r\n      <ul>\r\n        {textFields.map( (field, ind) => (\r\n        <li key={ind} >\r\n          <span>{fieldNames[ind]}</span><span>{field}</span>\r\n        </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Products from './Products.json';\nimport ProdList from './ProdList';\nimport Product from './Product';\nimport React, { useEffect, useState } from 'react'\n\nlocalStorage.setItem(\"products\", JSON.stringify(Products.result))\n\nfunction App() {\n  const [error, setError] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [items, setItems] = useState( [] )\n\n  useEffect(() => {\n    // I have used the workaround to make the code works through CORS\n    // but it looks like there are restrictions on the site https://cors-anywhere.herokuapp.com/ \n    // and at one point the code stopped working\n    // fetch(\"https://cors-anywhere.herokuapp.com/https://api.printful.com/products/\")\n    // .then(res => res.json())\n    // .then(result => {\n    //   setIsLoaded(true)\n    //   setItems(result)\n    // },\n    // (error) => {\n    //   setIsLoaded(true)\n    //   setError(error)\n    // })\n    setItems(JSON.parse(localStorage.products))\n    setIsLoaded(true)\n    \n  }, [])\n\n\n\n  return (\n    <div className=\"products\">\n        {console.dir(items)}\n        <ProdList err={error} load={isLoaded} items={items} />\n        <Product err={error} load={isLoaded} items={items} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}